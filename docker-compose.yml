services:
    nginx:
        container_name: nginx
        image: nginx:latest
        volumes:
            - ./:/var/www
            - ./_docker/nginx/conf.d:/etc/nginx/conf.d
        ports:
            - "8000:80"
        depends_on:
            - app
        networks:
            - innowise_network

    app:
        container_name: app
        build:
            context: .
            dockerfile: _docker/app/Dockerfile
            args:
                USER_ID: ${UID:-1000}
        volumes:
            - ./:/var/www
            - composer_cache:/var/www/.composer
        depends_on:
            - mysql
            - rabbitmq
        networks:
            - innowise_network

    cron:
        container_name: cron
        build:
            context: .
            dockerfile: _docker/app/Dockerfile
        user: root
        command: cron -f
        volumes:
            - .:/var/www
        networks:
            - innowise_network

    worker:
        container_name: queue_worker
        build:
            context: .
            dockerfile: _docker/app/Dockerfile
        volumes:
            - .:/var/www
        command: php artisan queue:work --sleep=3 --tries=3
        restart: always
        depends_on:
            - app
            - mysql
        networks:
            - innowise_network

    mysql:
        container_name: mysql
        image: mysql:latest
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        ports:
            - "3307:3306"
        volumes:
            - mysql_data:/var/lib/mysql
        networks:
            - innowise_network

    phpmyadmin:
        container_name: phpmyadmin
        image: phpmyadmin/phpmyadmin:latest
        ports:
            - "8080:80"
        environment:
            PMA_HOST: ${DB_HOST}
            PMA_USER: ${DB_USERNAME}
            PMA_PASSWORD: ${DB_PASSWORD}
        depends_on:
            - mysql
        networks:
            - innowise_network

    rabbitmq:
        container_name: rabbitmq
        image: rabbitmq:3-management
        ports:
            - "5672:5672"
            - "15672:15672"
        environment:
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
            RABBITMQ_DEFAULT_VHOST: /
        networks:
            - innowise_network

volumes:
    mysql_data:
    composer_cache:

networks:
    innowise_network:
        driver: bridge
